// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteAPI_Iara.Context;

#nullable disable

namespace TesteAPI_Iara.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221213201314_AjusteTabelas")]
    partial class AjusteTabelas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TesteAPI_Iara.Models.Cotacao", b =>
                {
                    b.Property<int>("CotacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("CnpjComprador")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CnpjFornecedor")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<DateTime>("DataCotacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataEntregaCotacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("NumeroCotacao")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.HasKey("CotacaoId");

                    b.ToTable("Cotacoes");
                });

            modelBuilder.Entity("TesteAPI_Iara.Models.CotacaoItem", b =>
                {
                    b.Property<int>("CotacaoItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CotacaoId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("NumeroItem")
                        .HasColumnType("int");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(10,2)");

                    b.Property<float>("Quantidade")
                        .HasColumnType("float");

                    b.Property<string>("Unidade")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("CotacaoItemId");

                    b.HasIndex("CotacaoId");

                    b.ToTable("ContacaoItems");
                });

            modelBuilder.Entity("TesteAPI_Iara.Models.CotacaoItem", b =>
                {
                    b.HasOne("TesteAPI_Iara.Models.Cotacao", "Cotacao")
                        .WithMany("CotacaoItens")
                        .HasForeignKey("CotacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cotacao");
                });

            modelBuilder.Entity("TesteAPI_Iara.Models.Cotacao", b =>
                {
                    b.Navigation("CotacaoItens");
                });
#pragma warning restore 612, 618
        }
    }
}
